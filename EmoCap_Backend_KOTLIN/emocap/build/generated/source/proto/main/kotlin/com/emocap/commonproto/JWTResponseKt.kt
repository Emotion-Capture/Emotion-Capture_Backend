// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.emocap.commonproto;

@kotlin.jvm.JvmName("-initializejWTResponse")
public inline fun jWTResponse(block: com.emocap.commonproto.JWTResponseKt.Dsl.() -> kotlin.Unit): com.emocap.commonproto.JWTResponse =
  com.emocap.commonproto.JWTResponseKt.Dsl._create(com.emocap.commonproto.JWTResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `common.JWTResponse`
 */
public object JWTResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.emocap.commonproto.JWTResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.emocap.commonproto.JWTResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.emocap.commonproto.JWTResponse = _builder.build()

    /**
     * `bool success = 1;`
     */
    public var success: kotlin.Boolean
      @JvmName("getSuccess")
      get() = _builder.getSuccess()
      @JvmName("setSuccess")
      set(value) {
        _builder.setSuccess(value)
      }
    /**
     * `bool success = 1;`
     */
    public fun clearSuccess() {
      _builder.clearSuccess()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.emocap.commonproto.JWTResponse.copy(block: com.emocap.commonproto.JWTResponseKt.Dsl.() -> kotlin.Unit): com.emocap.commonproto.JWTResponse =
  com.emocap.commonproto.JWTResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

